{
  "version": 3,
  "sources": ["../src/convert.tsx", "../src/conversions.ts", "../src/colors.ts", "../src/spacings.ts"],
  "sourcesContent": ["import { Action, ActionPanel, Color, Icon, List } from \"@raycast/api\";\nimport { useState } from \"react\";\nimport { findClosestColor } from \"./colors\";\n\nimport {\n  REMtoPX,\n  REMtoPT,\n  PXtoREM,\n  PXtoPT,\n  PTtoREM,\n  PTtoPX,\n  HEXtoRGBA,\n  HEXtoRGB,\n  HEXtoHSLA,\n  HEXtoHSL,\n  RGBtoHEX,\n  RGBtoHEXA,\n  RGBtoHSL,\n  RGBtoHSLA,\n  HSLtoHEX,\n  HSLtoHEXA,\n  HSLtoRGB,\n  HSLtoRGBA,\n} from \"./conversions\";\nimport { PXtoTailwindSpacing, REMtoTailwindSpacing } from \"./spacings\";\n\nfunction disableAdjustContrast(rawColor: string): Color.Dynamic {\n  return { light: rawColor, dark: rawColor, adjustContrast: false };\n}\n\nexport default function Command() {\n  const [rem, setREM] = useState<number | null>(null);\n  const [px, setPX] = useState<number | null>(null);\n  const [pt, setPT] = useState<number | null>(null);\n  const [hex, setHEX] = useState<string | null>(null);\n  const [hexa, setHEXA] = useState<string | null>(null);\n  const [rgb, setRGB] = useState<number[] | null>(null);\n  const [rgba, setRGBA] = useState<number[] | null>(null);\n  const [hsl, setHSL] = useState<number[] | null>(null);\n  const [hsla, setHSLA] = useState<number[] | null>(null);\n  const [tailwind, setTailwind] = useState<string | null>(null);\n  const [closestColor, setClosestColor] = useState<{ name: string; hex: string } | null>(null);\n  const [input, setInput] = useState(\"\");\n\n  const handleOnTextChange = (value = \"\") => {\n    setPX(null);\n    setREM(null);\n    setPT(null);\n    setHEX(null);\n    setHEXA(null);\n    setRGB(null);\n    setRGBA(null);\n    setHSL(null);\n    setHSLA(null);\n    setClosestColor(null);\n    setTailwind(null);\n    if (value === \"\") return;\n    setInput(value);\n    // check what input is\n\n    // check if input is rem\n    const remMatch = value.match(/(\\d+|^.\\d+|^,\\d+|^\\d+,\\d+|^\\d+.\\d+)(\\srem|rem)/i);\n    if (remMatch) {\n      console.log(\"its a rem\");\n      setPX(REMtoPX(Number(remMatch[1])));\n      setPT(REMtoPT(Number(remMatch[1])));\n      setTailwind(REMtoTailwindSpacing(Number(remMatch[1])));\n    }\n\n    // check if input is px\n    const pxMatch = value.match(/(\\d+|^.\\d+|^,\\d+|^\\d+,\\d+|^\\d+.\\d+)(\\spx|px)/);\n    if (pxMatch) {\n      console.log(\"its a px\");\n      setREM(PXtoREM(Number(pxMatch[1])));\n      setPT(PXtoPT(Number(pxMatch[1])));\n      setTailwind(PXtoTailwindSpacing(Number(pxMatch[1])));\n    }\n\n    // check if input is pt\n    const ptMatch = value.match(/(\\d+|^.\\d+|^,\\d+|^\\d+,\\d+|^\\d+.\\d+)(\\spt|pt)/i);\n    if (ptMatch) {\n      console.log(\"its a pt\");\n      setREM(PTtoREM(Number(ptMatch[1])));\n      setPX(PTtoPX(Number(ptMatch[1])));\n    }\n\n    // check if input is hex color\n    const hexMatch = value.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})(?<alpha>[A-Fa-f0-9]{2})?$/i);\n    if (hexMatch) {\n      console.log(\"its a hex\");\n      // if hex color has alpha\n      if (hexMatch.groups && hexMatch.groups.alpha) {\n        setRGBA(HEXtoRGBA(value));\n        setRGB(HEXtoRGB(hexMatch[1]));\n        setHSLA(HEXtoHSLA(value));\n        setHSL(HEXtoHSL(hexMatch[1]));\n      } else {\n        const hexToRgbResult = HEXtoRGB(value);\n        setRGB(hexToRgbResult);\n        setHSL(HEXtoHSL(value));\n        setClosestColor(findClosestColor(hexToRgbResult[0], hexToRgbResult[1], hexToRgbResult[2]));\n      }\n    }\n\n    // check if input is rgb color\n    const rgbMatch = value.match(\n      /^rgb(a)?\\((\\d{1,3}),(\\s)?(\\d{1,3}),(\\s)?(\\d{1,3})(,(\\s)?(?<alpha>\\d+\\.\\d+|\\.\\d+))?\\)$/i\n    );\n    if (rgbMatch) {\n      console.log(\"its a rgb\");\n      // if rgb color has alpha\n      if (rgbMatch.groups && rgbMatch.groups.alpha) {\n        setHEX(RGBtoHEX([+rgbMatch[2], +rgbMatch[4], +rgbMatch[6]]));\n        setHEXA(RGBtoHEXA([+rgbMatch[2], +rgbMatch[4], +rgbMatch[6], +rgbMatch.groups.alpha]));\n        setHSL(RGBtoHSL([+rgbMatch[2], +rgbMatch[4], +rgbMatch[6]]));\n        setHSLA(RGBtoHSLA([+rgbMatch[2], +rgbMatch[4], +rgbMatch[6], +rgbMatch.groups.alpha]));\n      } else {\n        setHEX(RGBtoHEX([+rgbMatch[2], +rgbMatch[4], +rgbMatch[6]]));\n        setHSL(RGBtoHSL([+rgbMatch[2], +rgbMatch[4], +rgbMatch[6]]));\n        setClosestColor(findClosestColor(+rgbMatch[2], +rgbMatch[4], +rgbMatch[6]));\n      }\n    }\n\n    // check if input is hsl color\n    const hslMatch = value.match(\n      /^hsl(a)?\\((\\d{1,3}),(\\s)?(\\d{1,3})(%)?,(\\s)?(\\d{1,3})(%)?(,(\\s)?(?<alpha>\\d+\\.\\d+|\\.\\d+))?\\)$/i\n    );\n    if (hslMatch) {\n      console.log(\"its a hsl\");\n      // if hsl color has alpha\n      if (hslMatch.groups && hslMatch.groups.alpha) {\n        setHEX(HSLtoHEX([+hslMatch[2], +hslMatch[4], +hslMatch[7]]));\n        setHEXA(HSLtoHEXA([+hslMatch[2], +hslMatch[4], +hslMatch[7], +hslMatch.groups.alpha]));\n        setRGB(HSLtoRGB([+hslMatch[2], +hslMatch[4], +hslMatch[7]]));\n        setRGBA(HSLtoRGBA([+hslMatch[2], +hslMatch[4], +hslMatch[7], +hslMatch.groups.alpha]));\n      } else {\n        const hslToRgbResult = HSLtoRGB([+hslMatch[2], +hslMatch[4], +hslMatch[7]]);\n        setHEX(HSLtoHEX([+hslMatch[2], +hslMatch[4], +hslMatch[7]]));\n        setRGB(hslToRgbResult);\n        setClosestColor(findClosestColor(hslToRgbResult[0], hslToRgbResult[1], hslToRgbResult[2]));\n      }\n    }\n  };\n\n  return (\n    <List\n      onSearchTextChange={handleOnTextChange}\n      enableFiltering={false}\n      searchBarPlaceholder=\"Type your unit here... (eg.: 22px or #006699)\"\n    >\n      <List.Section>\n        {rem && (\n          <List.Item\n            title={`${rem}rem`}\n            accessories={[{ text: \"to rem\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`${rem}rem`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {px && (\n          <List.Item\n            title={`${px}px`}\n            accessories={[{ text: \"to px\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`${px}px`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {pt && (\n          <List.Item\n            title={`${pt}pt`}\n            accessories={[{ text: \"to pt\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`${pt}pt`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {hex && (\n          <List.Item\n            title={hex}\n            icon={{ source: Icon.CircleFilled, tintColor: disableAdjustContrast(hex) }}\n            accessories={[{ text: \"to hex\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={hex} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {hexa && (\n          <List.Item\n            title={hexa}\n            icon={{ source: Icon.CircleFilled, tintColor: disableAdjustContrast(hexa) }}\n            accessories={[{ text: \"to hexa\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={hexa} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {rgb && (\n          <List.Item\n            title={`rgb(${rgb.join(\", \")})`}\n            icon={{ source: Icon.CircleFilled, tintColor: disableAdjustContrast(`rgb(${rgb.join(\", \")})`) }}\n            accessories={[{ text: \"to rgb\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`rgb(${rgb.join(\", \")})`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {rgba && (\n          <List.Item\n            title={`rgba(${rgba.join(\", \")})`}\n            icon={{ source: Icon.CircleFilled, tintColor: disableAdjustContrast(`rgba(${rgba.join(\", \")})`) }}\n            accessories={[{ text: \"to rgba\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`rgba(${rgba.join(\", \")})`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {hsl && (\n          <List.Item\n            title={`hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`}\n            icon={{\n              source: Icon.CircleFilled,\n              tintColor: disableAdjustContrast(`hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`),\n            }}\n            accessories={[{ text: \"to hsl\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {hsla && (\n          <List.Item\n            title={`hsla(${hsla[0]}, ${hsla[1]}%, ${hsla[2]}%, ${hsla[3]})`}\n            icon={{\n              source: Icon.CircleFilled,\n              tintColor: disableAdjustContrast(`hsla(${hsla[0]}, ${hsla[1]}%, ${hsla[2]}%, ${hsla[3]})`),\n            }}\n            accessories={[{ text: \"to hsla\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={`hsla(${hsla[0]}, ${hsla[1]}%, ${hsla[2]}%, ${hsla[3]})`} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {closestColor && (\n          <List.Item\n            title={input !== closestColor.hex && hex !== closestColor.hex ? closestColor.hex : closestColor.name}\n            subtitle={input !== closestColor.hex && hex !== closestColor.hex ? closestColor.name : \"\"}\n            icon={{ source: Icon.CircleFilled, tintColor: disableAdjustContrast(closestColor.hex) }}\n            accessories={[\n              {\n                text:\n                  input !== closestColor.hex && hex !== closestColor.hex ? \"closest Tailwind color\" : \"Tailwind color\",\n              },\n            ]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={input !== closestColor.hex ? closestColor.hex : closestColor.name} />\n              </ActionPanel>\n            }\n          />\n        )}\n        {tailwind && (\n          <List.Item\n            title={tailwind}\n            accessories={[{ text: tailwind.includes(\"]\") ? \"to Tailwind Arbitrary Value\" : \"to Tailwind Spacing\" }]}\n            actions={\n              <ActionPanel title=\"Copy\">\n                <Action.CopyToClipboard content={tailwind} />\n              </ActionPanel>\n            }\n          />\n        )}\n      </List.Section>\n    </List>\n  );\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\n\nexport interface Preferences {\n  basePixel?: string;\n}\n\nconst loadBasePixelsFromPreferences = () => {\n  const basePixel =\n    getPreferenceValues<Preferences>().basePixel === \"\" ? 16 : Number(getPreferenceValues<Preferences>().basePixel);\n  if (isNaN(basePixel)) {\n    return 16;\n  }\n  return basePixel;\n};\n\nconst BASE_FONT_PIXELS = loadBasePixelsFromPreferences();\n\nexport const REMtoPX = (rem: number) => rem * BASE_FONT_PIXELS;\n\nexport const REMtoPT = (rem: number): number => rem * 12;\n\nexport const PXtoREM = (px: number): number => px / BASE_FONT_PIXELS;\n\nexport const PXtoPT = (px: number): number => px * 0.75;\n\nexport const PTtoREM = (pt: number): number => pt / 12;\n\nexport const PTtoPX = (pt: number): number => pt / 0.75;\n\nexport const HEXtoRGB = (hex: string): number[] => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$|^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\n\n  return result\n    ? [\n        parseInt(result[1] ?? result[4] + result[4], 16),\n        parseInt(result[2] ?? result[5] + result[5], 16),\n        parseInt(result[3] ?? result[6] + result[6], 16),\n      ]\n    : [0, 0, 0];\n};\n\nexport const HEXtoRGBA = (hex: string): number[] => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n        Math.round((parseInt(result[4], 16) / 255) * 100) / 100,\n      ]\n    : [0, 0, 0, 0];\n};\n\nexport const HEXtoHSL = (hex: string): number[] => {\n  // Check if the input is a shorthand hex string\n  if (hex.length === 4) {\n    // Expand the shorthand string to a full hex string\n    hex = `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\n  }\n\n  const match = hex.match(/\\w\\w/g);\n  if (!match) return [];\n\n  // Convert the hex string to an RGB array\n  let [r, g, b] = match.map((x) => parseInt(x, 16));\n\n  // Normalize the RGB values\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  // Find the minimum and maximum RGB values\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  // Initialize the HSL values\n  let h = 0;\n  let s = 0;\n  let l = (max + min) / 2;\n\n  // Calculate the HSL values\n  if (max !== min) {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  // Format the HSL values to CSS syntax\n  h = Number(Math.round((h * 360) % 360));\n  s = Number(Math.round(s * 100));\n  l = Number(Math.round(l * 100));\n\n  // Return the HSL values as a number array\n  return [h, s, l];\n};\n\nexport const HEXtoHSLA = (hex: string): number[] => {\n  const rgba = HEXtoRGBA(hex);\n  const r = (rgba[0] /= 255);\n  const g = (rgba[1] /= 255);\n  const b = (rgba[2] /= 255);\n  const l = Math.max(r, g, b);\n  const s = l - Math.min(r, g, b);\n  const h = s ? (l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s) : 0;\n  return [\n    Math.round(60 * h < 0 ? 60 * h + 360 : 60 * h),\n    Math.round(100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0)),\n    Math.round((100 * (2 * l - s)) / 2),\n    rgba[3],\n  ];\n};\n\nexport const RGBtoHEX = (rgb: number[]): string => `#${rgb.map((x) => x.toString(16).padStart(2, \"0\")).join(\"\")}`;\n\n// export const RGBtoHSL = (rgb: number[]): number[] => {\n//   const r = (rgb[0] /= 255);\n//   const g = (rgb[1] /= 255);\n//   const b = (rgb[2] /= 255);\n//   const l = Math.max(r, g, b);\n//   const s = l - Math.min(r, g, b);\n//   const h = s ? (l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s) : 0;\n//   return [\n//     Math.round(60 * h < 0 ? 60 * h + 360 : 60 * h),\n//     Math.round(100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0)),\n//     Math.round((100 * (2 * l - s)) / 2),\n//   ];\n// };\n\nexport const RGBtoHSL = (rgb: number[]): number[] => {\n  const r = (rgb[0] /= 255);\n  const g = (rgb[1] /= 255);\n  const b = (rgb[2] /= 255);\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = 0;\n  let s = 0;\n  let l = (max + min) / 2;\n\n  if (max !== min) {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  // Format the HSL values to CSS syntax\n  h = Number(Math.round((h * 360) % 360));\n  s = Number(Math.round(s * 100));\n  l = Number(Math.round(l * 100));\n\n  return [h, s, l];\n};\n\nexport const RGBtoHEXA = (rgb: number[]): string =>\n  `#${rgb\n    .slice(0, 3)\n    .map((x) => x.toString(16).padStart(2, \"0\"))\n    .join(\"\")}${Math.round(rgb[3] * 255)\n    .toString(16)\n    .padStart(2, \"0\")}`;\n\nexport const RGBtoHSLA = (rgb: number[]): number[] => {\n  const r = (rgb[0] /= 255);\n  const g = (rgb[1] /= 255);\n  const b = (rgb[2] /= 255);\n  const l = Math.max(r, g, b);\n  const s = l - Math.min(r, g, b);\n  const h = s ? (l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s) : 0;\n  return [\n    Math.round(60 * h < 0 ? 60 * h + 360 : 60 * h),\n    Math.round(100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0)),\n    Math.round((100 * (2 * l - s)) / 2),\n    rgb[3],\n  ];\n};\n\nexport const HSLtoHEX = (hsl: number[]): string => {\n  const h = hsl[0];\n  const s = hsl[1];\n  let l = hsl[2];\n  l /= 100;\n  const a = (s * Math.min(l, 1 - l)) / 100;\n  const f = (n: number) => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color)\n      .toString(16)\n      .padStart(2, \"0\");\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n};\n\nexport const HSLtoHEXA = (hsl: number[]): string => {\n  const h = hsl[0];\n  const s = hsl[1];\n  let l = hsl[2];\n  l /= 100;\n  const a = (s * Math.min(l, 1 - l)) / 100;\n  const f = (n: number) => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color)\n      .toString(16)\n      .padStart(2, \"0\");\n  };\n  return `#${f(0)}${f(8)}${f(4)}${Math.round(a * 255)\n    .toString(16)\n    .padStart(2, \"0\")}`;\n};\n\nexport const HSLtoRGB = (hsl: number[]): number[] => {\n  const h = hsl[0];\n  const s = (hsl[1] /= 100);\n  const l = (hsl[2] /= 100);\n  const k = (n: number) => (n + h / 30) % 12;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n: number) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n  return [Math.round(255 * f(0)), Math.round(255 * f(8)), Math.round(255 * f(4))];\n};\n\nexport const HSLtoRGBA = (hsl: number[]): number[] => {\n  const h = hsl[0];\n  const s = (hsl[1] /= 100);\n  const l = (hsl[2] /= 100);\n  const k = (n: number) => (n + h / 30) % 12;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n: number) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n  return [Math.round(255 * f(0)), Math.round(255 * f(8)), Math.round(255 * f(4)), hsl[3]];\n};\n\nexport const Base64toDecode = (base64: string): string => {\n  const buff = Buffer.from(base64, \"base64\");\n  return buff.toString(\"ascii\");\n};\n\nexport const Base64toEncode = (base64: string): string => {\n  const buff = Buffer.from(base64);\n  return buff.toString(\"base64\");\n};\n", "import { HEXtoRGB } from \"./conversions\";\n// tailwind colors as of v3.3.2\nconst colors: { [key: string]: { [key: string]: string } } = {\n  slate: {\n    \"50\": \"#f8fafc\",\n    \"100\": \"#f1f5f9\",\n    \"200\": \"#e2e8f0\",\n    \"300\": \"#cbd5e1\",\n    \"400\": \"#94a3b8\",\n    \"500\": \"#64748b\",\n    \"600\": \"#475569\",\n    \"700\": \"#334155\",\n    \"800\": \"#1e293b\",\n    \"900\": \"#0f172a\",\n  },\n  gray: {\n    \"50\": \"#f9fafb\",\n    \"100\": \"#f3f4f6\",\n    \"200\": \"#e5e7eb\",\n    \"300\": \"#d1d5db\",\n    \"400\": \"#9ca3af\",\n    \"500\": \"#6b7280\",\n    \"600\": \"#4b5563\",\n    \"700\": \"#374151\",\n    \"800\": \"#1f2937\",\n    \"900\": \"#111827\",\n  },\n  zinc: {\n    \"50\": \"#fafafa\",\n    \"100\": \"#f4f4f5\",\n    \"200\": \"#e4e4e7\",\n    \"300\": \"#d4d4d8\",\n    \"400\": \"#a1a1aa\",\n    \"500\": \"#71717a\",\n    \"600\": \"#52525b\",\n    \"700\": \"#3f3f46\",\n    \"800\": \"#27272a\",\n    \"900\": \"#18181b\",\n  },\n  neutral: {\n    \"50\": \"#fafafa\",\n    \"100\": \"#f5f5f5\",\n    \"200\": \"#e5e5e5\",\n    \"300\": \"#d4d4d4\",\n    \"400\": \"#a3a3a3\",\n    \"500\": \"#737373\",\n    \"600\": \"#525252\",\n    \"700\": \"#404040\",\n    \"800\": \"#262626\",\n    \"900\": \"#171717\",\n  },\n  stone: {\n    \"50\": \"#fafaf9\",\n    \"100\": \"#f5f5f4\",\n    \"200\": \"#e7e5e4\",\n    \"300\": \"#d6d3d1\",\n    \"400\": \"#a8a29e\",\n    \"500\": \"#78716c\",\n    \"600\": \"#57534e\",\n    \"700\": \"#44403c\",\n    \"800\": \"#292524\",\n    \"900\": \"#1c1917\",\n  },\n  red: {\n    \"50\": \"#fef2f2\",\n    \"100\": \"#fee2e2\",\n    \"200\": \"#fecaca\",\n    \"300\": \"#fca5a5\",\n    \"400\": \"#f87171\",\n    \"500\": \"#ef4444\",\n    \"600\": \"#dc2626\",\n    \"700\": \"#b91c1c\",\n    \"800\": \"#991b1b\",\n    \"900\": \"#7f1d1d\",\n  },\n  orange: {\n    \"50\": \"#fff7ed\",\n    \"100\": \"#ffedd5\",\n    \"200\": \"#fed7aa\",\n    \"300\": \"#fdba74\",\n    \"400\": \"#fb923c\",\n    \"500\": \"#f97316\",\n    \"600\": \"#ea580c\",\n    \"700\": \"#c2410c\",\n    \"800\": \"#9a3412\",\n    \"900\": \"#7c2d12\",\n  },\n  amber: {\n    \"50\": \"#fffbeb\",\n    \"100\": \"#fef3c7\",\n    \"200\": \"#fde68a\",\n    \"300\": \"#fcd34d\",\n    \"400\": \"#fbbf24\",\n    \"500\": \"#f59e0b\",\n    \"600\": \"#d97706\",\n    \"700\": \"#b45309\",\n    \"800\": \"#92400e\",\n    \"900\": \"#78350f\",\n  },\n  yellow: {\n    \"50\": \"#fefce8\",\n    \"100\": \"#fef9c3\",\n    \"200\": \"#fef08a\",\n    \"300\": \"#fde047\",\n    \"400\": \"#facc15\",\n    \"500\": \"#eab308\",\n    \"600\": \"#ca8a04\",\n    \"700\": \"#a16207\",\n    \"800\": \"#854d0e\",\n    \"900\": \"#713f12\",\n  },\n  lime: {\n    \"50\": \"#f7fee7\",\n    \"100\": \"#ecfccb\",\n    \"200\": \"#d9f99d\",\n    \"300\": \"#bef264\",\n    \"400\": \"#a3e635\",\n    \"500\": \"#84cc16\",\n    \"600\": \"#65a30d\",\n    \"700\": \"#4d7c0f\",\n    \"800\": \"#3f6212\",\n    \"900\": \"#365314\",\n  },\n  green: {\n    \"50\": \"#f0fdf4\",\n    \"100\": \"#dcfce7\",\n    \"200\": \"#bbf7d0\",\n    \"300\": \"#86efac\",\n    \"400\": \"#4ade80\",\n    \"500\": \"#22c55e\",\n    \"600\": \"#16a34a\",\n    \"700\": \"#15803d\",\n    \"800\": \"#166534\",\n    \"900\": \"#14532d\",\n  },\n  emerald: {\n    \"50\": \"#ecfdf5\",\n    \"100\": \"#d1fae5\",\n    \"200\": \"#a7f3d0\",\n    \"300\": \"#6ee7b7\",\n    \"400\": \"#34d399\",\n    \"500\": \"#10b981\",\n    \"600\": \"#059669\",\n    \"700\": \"#047857\",\n    \"800\": \"#065f46\",\n    \"900\": \"#064e3b\",\n  },\n  teal: {\n    \"50\": \"#f0fdfa\",\n    \"100\": \"#ccfbf1\",\n    \"200\": \"#99f6e4\",\n    \"300\": \"#5eead4\",\n    \"400\": \"#2dd4bf\",\n    \"500\": \"#14b8a6\",\n    \"600\": \"#0d9488\",\n    \"700\": \"#0f766e\",\n    \"800\": \"#115e59\",\n    \"900\": \"#134e4a\",\n  },\n  cyan: {\n    \"50\": \"#ecfeff\",\n    \"100\": \"#cffafe\",\n    \"200\": \"#a5f3fc\",\n    \"300\": \"#67e8f9\",\n    \"400\": \"#22d3ee\",\n    \"500\": \"#06b6d4\",\n    \"600\": \"#0891b2\",\n    \"700\": \"#0e7490\",\n    \"800\": \"#155e75\",\n    \"900\": \"#164e63\",\n  },\n  sky: {\n    \"50\": \"#f0f9ff\",\n    \"100\": \"#e0f2fe\",\n    \"200\": \"#bae6fd\",\n    \"300\": \"#7dd3fc\",\n    \"400\": \"#38bdf8\",\n    \"500\": \"#0ea5e9\",\n    \"600\": \"#0284c7\",\n    \"700\": \"#0369a1\",\n    \"800\": \"#075985\",\n    \"900\": \"#0c4a6e\",\n  },\n  blue: {\n    \"50\": \"#eff6ff\",\n    \"100\": \"#dbeafe\",\n    \"200\": \"#bfdbfe\",\n    \"300\": \"#93c5fd\",\n    \"400\": \"#60a5fa\",\n    \"500\": \"#3b82f6\",\n    \"600\": \"#2563eb\",\n    \"700\": \"#1d4ed8\",\n    \"800\": \"#1e40af\",\n    \"900\": \"#1e3a8a\",\n  },\n  indigo: {\n    \"50\": \"#eef2ff\",\n    \"100\": \"#e0e7ff\",\n    \"200\": \"#c7d2fe\",\n    \"300\": \"#a5b4fc\",\n    \"400\": \"#818cf8\",\n    \"500\": \"#6366f1\",\n    \"600\": \"#4f46e5\",\n    \"700\": \"#4338ca\",\n    \"800\": \"#3730a3\",\n    \"900\": \"#312e81\",\n  },\n  violet: {\n    \"50\": \"#f5f3ff\",\n    \"100\": \"#ede9fe\",\n    \"200\": \"#ddd6fe\",\n    \"300\": \"#c4b5fd\",\n    \"400\": \"#a78bfa\",\n    \"500\": \"#8b5cf6\",\n    \"600\": \"#7c3aed\",\n    \"700\": \"#6d28d9\",\n    \"800\": \"#5b21b6\",\n    \"900\": \"#4c1d95\",\n  },\n  purple: {\n    \"50\": \"#faf5ff\",\n    \"100\": \"#f3e8ff\",\n    \"200\": \"#e9d5ff\",\n    \"300\": \"#d8b4fe\",\n    \"400\": \"#c084fc\",\n    \"500\": \"#a855f7\",\n    \"600\": \"#9333ea\",\n    \"700\": \"#7e22ce\",\n    \"800\": \"#6b21a8\",\n    \"900\": \"#581c87\",\n  },\n  fuchsia: {\n    \"50\": \"#fdf4ff\",\n    \"100\": \"#fae8ff\",\n    \"200\": \"#f5d0fe\",\n    \"300\": \"#f0abfc\",\n    \"400\": \"#e879f9\",\n    \"500\": \"#d946ef\",\n    \"600\": \"#c026d3\",\n    \"700\": \"#a21caf\",\n    \"800\": \"#86198f\",\n    \"900\": \"#701a75\",\n  },\n  pink: {\n    \"50\": \"#fdf2f8\",\n    \"100\": \"#fce7f3\",\n    \"200\": \"#fbcfe8\",\n    \"300\": \"#f9a8d4\",\n    \"400\": \"#f472b6\",\n    \"500\": \"#ec4899\",\n    \"600\": \"#db2777\",\n    \"700\": \"#be185d\",\n    \"800\": \"#9d174d\",\n    \"900\": \"#831843\",\n  },\n  rose: {\n    \"50\": \"#fff1f2\",\n    \"100\": \"#ffe4e6\",\n    \"200\": \"#fecdd3\",\n    \"300\": \"#fda4af\",\n    \"400\": \"#fb7185\",\n    \"500\": \"#f43f5e\",\n    \"600\": \"#e11d48\",\n    \"700\": \"#be123c\",\n    \"800\": \"#9f1239\",\n    \"900\": \"#881337\",\n  },\n};\n\nexport function findClosestColor(r: number, g: number, b: number): { name: string; hex: string } {\n  let closestColor = { name: \"\", hex: \"\" };\n  let closestDistance = Number.MAX_SAFE_INTEGER;\n  // Iterate over each color group (e.g. \"slate\", \"gray\", etc.)\n  for (const colorGroup in colors) {\n    // Iterate over each color in the color group\n    for (const shade in colors[colorGroup]) {\n      // Convert the color to RGB values\n      const shadeRgb = HEXtoRGB(colors[colorGroup][shade]);\n      // Calculate the Euclidean distance between the two colors\n      const distance = Math.sqrt(\n        Math.pow(r - shadeRgb[0], 2) + Math.pow(g - shadeRgb[1], 2) + Math.pow(b - shadeRgb[2], 2)\n      );\n      // If the distance is smaller than the current closest distance, update the closest color and distance\n      if (distance < closestDistance) {\n        closestColor = { name: `${colorGroup}-${shade}`, hex: colors[colorGroup][shade] };\n        closestDistance = distance;\n      }\n    }\n  }\n  return closestColor;\n}\n", "// tailwind spacings as of v3.3.2\nexport const spacing = {\n  \"0\": {\n    size: 0,\n    pixels: 0,\n    slug: \"0\",\n  },\n  px: {\n    size: 1,\n    pixels: 1,\n    slug: \"px\",\n  },\n  \"0.5\": {\n    size: 0.125,\n    pixels: 2,\n    slug: \"0.5\",\n  },\n  \"1\": {\n    size: 0.25,\n    pixels: 4,\n    slug: \"1\",\n  },\n  \"1.5\": {\n    size: 0.375,\n    pixels: 6,\n    slug: \"1.5\",\n  },\n  \"2\": {\n    size: 0.5,\n    pixels: 8,\n    slug: \"2\",\n  },\n  \"2.5\": {\n    size: 0.625,\n    pixels: 10,\n    slug: \"2.5\",\n  },\n  \"3\": {\n    size: 0.75,\n    pixels: 12,\n    slug: \"3\",\n  },\n  \"3.5\": {\n    size: 0.875,\n    pixels: 14,\n    slug: \"3.5\",\n  },\n  \"4\": {\n    size: 1,\n    pixels: 16,\n    slug: \"4\",\n  },\n  \"5\": {\n    size: 1.25,\n    pixels: 20,\n    slug: \"5\",\n  },\n  \"6\": {\n    size: 1.5,\n    pixels: 24,\n    slug: \"6\",\n  },\n  \"7\": {\n    size: 1.75,\n    pixels: 28,\n    slug: \"7\",\n  },\n  \"8\": {\n    size: 2,\n    pixels: 32,\n    slug: \"8\",\n  },\n  \"9\": {\n    size: 2.25,\n    pixels: 36,\n    slug: \"9\",\n  },\n  \"10\": {\n    size: 2.5,\n    pixels: 40,\n    slug: \"10\",\n  },\n  \"11\": {\n    size: 2.75,\n    pixels: 44,\n    slug: \"11\",\n  },\n  \"12\": {\n    size: 3,\n    pixels: 48,\n    slug: \"12\",\n  },\n  \"14\": {\n    size: 3.5,\n    pixels: 56,\n    slug: \"14\",\n  },\n  \"16\": {\n    size: 4,\n    pixels: 64,\n    slug: \"16\",\n  },\n  \"20\": {\n    size: 5,\n    pixels: 80,\n    slug: \"20\",\n  },\n  \"24\": {\n    size: 6,\n    pixels: 96,\n    slug: \"24\",\n  },\n  \"28\": {\n    size: 7,\n    pixels: 112,\n    slug: \"28\",\n  },\n  \"32\": {\n    size: 8,\n    pixels: 128,\n    slug: \"32\",\n  },\n  \"36\": {\n    size: 9,\n    pixels: 144,\n    slug: \"36\",\n  },\n  \"40\": {\n    size: 10,\n    pixels: 160,\n    slug: \"40\",\n  },\n  \"44\": {\n    size: 11,\n    pixels: 176,\n    slug: \"44\",\n  },\n  \"48\": {\n    size: 12,\n    pixels: 192,\n    slug: \"48\",\n  },\n  \"52\": {\n    size: 13,\n    pixels: 208,\n    slug: \"52\",\n  },\n  \"56\": {\n    size: 14,\n    pixels: 224,\n    slug: \"56\",\n  },\n  \"60\": {\n    size: 15,\n    pixels: 240,\n    slug: \"60\",\n  },\n  \"64\": {\n    size: 16,\n    pixels: 256,\n    slug: \"64\",\n  },\n  \"72\": {\n    size: 18,\n    pixels: 288,\n    slug: \"72\",\n  },\n  \"80\": {\n    size: 20,\n    pixels: 320,\n    slug: \"80\",\n  },\n  \"96\": {\n    size: 24,\n    pixels: 384,\n    slug: \"96\",\n  },\n};\n\nexport function PXtoTailwindSpacing(value: number): string {\n  const spacingValue = Object.values(spacing).find((s) => s.pixels === value);\n  if (spacingValue) {\n    return spacingValue.slug;\n  }\n  return `[${value}px]`;\n}\n\nexport function REMtoTailwindSpacing(value: number): string {\n  console.log(value);\n  const spacingValue = Object.values(spacing).find((s) => s.size === value);\n  if (spacingValue) {\n    return spacingValue.slug;\n  }\n  return `[${value}rem]`;\n}\n"],
  "mappings": "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ACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,QAAS,CACP,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,MAAO,CACL,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,IAAK,CACH,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,OAAQ,CACN,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,MAAO,CACL,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,OAAQ,CACN,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,KAAM,CACJ,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,MAAO,CACL,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,QAAS,CACP,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,KAAM,CACJ,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,KAAM,CACJ,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,IAAK,CACH,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,KAAM,CACJ,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,OAAQ,CACN,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,OAAQ,CACN,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,OAAQ,CACN,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,QAAS,CACP,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,KAAM,CACJ,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,EACA,KAAM,CACJ,GAAM,UACN,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACT,CACF,EAEO,SAASC,EAAiBC,EAAWC,EAAWC,EAA0C,CAC/F,IAAIC,EAAe,CAAE,KAAM,GAAI,IAAK,EAAG,EACnCC,EAAkB,OAAO,iBAE7B,QAAWC,KAAcP,EAEvB,QAAWQ,KAASR,EAAOO,CAAU,EAAG,CAEtC,IAAME,EAAWC,EAASV,EAAOO,CAAU,EAAEC,CAAK,CAAC,EAE7CG,EAAW,KAAK,KACpB,KAAK,IAAIT,EAAIO,EAAS,CAAC,EAAG,CAAC,EAAI,KAAK,IAAIN,EAAIM,EAAS,CAAC,EAAG,CAAC,EAAI,KAAK,IAAIL,EAAIK,EAAS,CAAC,EAAG,CAAC,CAC3F,EAEIE,EAAWL,IACbD,EAAe,CAAE,KAAM,GAAGE,KAAcC,IAAS,IAAKR,EAAOO,CAAU,EAAEC,CAAK,CAAE,EAChFF,EAAkBK,GAIxB,OAAON,CACT,CCjSO,IAAMO,GAAU,CACrB,EAAK,CACH,KAAM,EACN,OAAQ,EACR,KAAM,GACR,EACA,GAAI,CACF,KAAM,EACN,OAAQ,EACR,KAAM,IACR,EACA,MAAO,CACL,KAAM,KACN,OAAQ,EACR,KAAM,KACR,EACA,EAAK,CACH,KAAM,IACN,OAAQ,EACR,KAAM,GACR,EACA,MAAO,CACL,KAAM,KACN,OAAQ,EACR,KAAM,KACR,EACA,EAAK,CACH,KAAM,GACN,OAAQ,EACR,KAAM,GACR,EACA,MAAO,CACL,KAAM,KACN,OAAQ,GACR,KAAM,KACR,EACA,EAAK,CACH,KAAM,IACN,OAAQ,GACR,KAAM,GACR,EACA,MAAO,CACL,KAAM,KACN,OAAQ,GACR,KAAM,KACR,EACA,EAAK,CACH,KAAM,EACN,OAAQ,GACR,KAAM,GACR,EACA,EAAK,CACH,KAAM,KACN,OAAQ,GACR,KAAM,GACR,EACA,EAAK,CACH,KAAM,IACN,OAAQ,GACR,KAAM,GACR,EACA,EAAK,CACH,KAAM,KACN,OAAQ,GACR,KAAM,GACR,EACA,EAAK,CACH,KAAM,EACN,OAAQ,GACR,KAAM,GACR,EACA,EAAK,CACH,KAAM,KACN,OAAQ,GACR,KAAM,GACR,EACA,GAAM,CACJ,KAAM,IACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,KACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,IACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,GACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,EACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,EACA,GAAM,CACJ,KAAM,GACN,OAAQ,IACR,KAAM,IACR,CACF,EAEO,SAASC,GAAoBC,EAAuB,CACzD,IAAMC,EAAe,OAAO,OAAOH,EAAO,EAAE,KAAMI,GAAMA,EAAE,SAAWF,CAAK,EAC1E,OAAIC,EACKA,EAAa,KAEf,IAAID,MACb,CAEO,SAASG,GAAqBH,EAAuB,CAC1D,QAAQ,IAAIA,CAAK,EACjB,IAAMC,EAAe,OAAO,OAAOH,EAAO,EAAE,KAAMI,GAAMA,EAAE,OAASF,CAAK,EACxE,OAAIC,EACKA,EAAa,KAEf,IAAID,OACb,CH5CM,IAAAI,EAAA,6BA5HN,SAASC,EAAsBC,EAAiC,CAC9D,MAAO,CAAE,MAAOA,EAAU,KAAMA,EAAU,eAAgB,EAAM,CAClE,CAEe,SAARC,IAA2B,CAChC,GAAM,CAACC,EAAKC,CAAM,KAAI,YAAwB,IAAI,EAC5C,CAACC,EAAIC,CAAK,KAAI,YAAwB,IAAI,EAC1C,CAACC,EAAIC,CAAK,KAAI,YAAwB,IAAI,EAC1C,CAACC,EAAKC,CAAM,KAAI,YAAwB,IAAI,EAC5C,CAACC,EAAMC,CAAO,KAAI,YAAwB,IAAI,EAC9C,CAACC,EAAKC,CAAM,KAAI,YAA0B,IAAI,EAC9C,CAACC,EAAMC,CAAO,KAAI,YAA0B,IAAI,EAChD,CAACC,EAAKC,CAAM,KAAI,YAA0B,IAAI,EAC9C,CAACC,EAAMC,CAAO,KAAI,YAA0B,IAAI,EAChD,CAACC,EAAUC,CAAW,KAAI,YAAwB,IAAI,EACtD,CAACC,EAAcC,CAAe,KAAI,YAA+C,IAAI,EACrF,CAACC,EAAOC,EAAQ,KAAI,YAAS,EAAE,EAsGrC,SACE,OAAC,QACC,mBAtGuB,CAACC,EAAQ,KAAO,CAYzC,GAXArB,EAAM,IAAI,EACVF,EAAO,IAAI,EACXI,EAAM,IAAI,EACVE,EAAO,IAAI,EACXE,EAAQ,IAAI,EACZE,EAAO,IAAI,EACXE,EAAQ,IAAI,EACZE,EAAO,IAAI,EACXE,EAAQ,IAAI,EACZI,EAAgB,IAAI,EACpBF,EAAY,IAAI,EACZK,IAAU,GAAI,OAClBD,GAASC,CAAK,EAId,IAAMC,EAAWD,EAAM,MAAM,iDAAiD,EAC1EC,IACF,QAAQ,IAAI,WAAW,EACvBtB,EAAMuB,EAAQ,OAAOD,EAAS,CAAC,CAAC,CAAC,CAAC,EAClCpB,EAAMsB,EAAQ,OAAOF,EAAS,CAAC,CAAC,CAAC,CAAC,EAClCN,EAAYS,GAAqB,OAAOH,EAAS,CAAC,CAAC,CAAC,CAAC,GAIvD,IAAMI,EAAUL,EAAM,MAAM,8CAA8C,EACtEK,IACF,QAAQ,IAAI,UAAU,EACtB5B,EAAO6B,EAAQ,OAAOD,EAAQ,CAAC,CAAC,CAAC,CAAC,EAClCxB,EAAM0B,EAAO,OAAOF,EAAQ,CAAC,CAAC,CAAC,CAAC,EAChCV,EAAYa,GAAoB,OAAOH,EAAQ,CAAC,CAAC,CAAC,CAAC,GAIrD,IAAMI,EAAUT,EAAM,MAAM,+CAA+C,EACvES,IACF,QAAQ,IAAI,UAAU,EACtBhC,EAAOiC,EAAQ,OAAOD,EAAQ,CAAC,CAAC,CAAC,CAAC,EAClC9B,EAAMgC,EAAO,OAAOF,EAAQ,CAAC,CAAC,CAAC,CAAC,GAIlC,IAAMG,EAAWZ,EAAM,MAAM,8DAA8D,EAC3F,GAAIY,EAGF,GAFA,QAAQ,IAAI,WAAW,EAEnBA,EAAS,QAAUA,EAAS,OAAO,MACrCvB,EAAQwB,EAAUb,CAAK,CAAC,EACxBb,EAAO2B,EAASF,EAAS,CAAC,CAAC,CAAC,EAC5BnB,EAAQsB,EAAUf,CAAK,CAAC,EACxBT,EAAOyB,EAASJ,EAAS,CAAC,CAAC,CAAC,MACvB,CACL,IAAMK,EAAiBH,EAASd,CAAK,EACrCb,EAAO8B,CAAc,EACrB1B,EAAOyB,EAAShB,CAAK,CAAC,EACtBH,EAAgBqB,EAAiBD,EAAe,CAAC,EAAGA,EAAe,CAAC,EAAGA,EAAe,CAAC,CAAC,CAAC,EAK7F,IAAME,EAAWnB,EAAM,MACrB,wFACF,EACImB,IACF,QAAQ,IAAI,WAAW,EAEnBA,EAAS,QAAUA,EAAS,OAAO,OACrCpC,EAAOqC,EAAS,CAAC,CAACD,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3DlC,EAAQoC,GAAU,CAAC,CAACF,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,OAAO,KAAK,CAAC,CAAC,EACrF5B,EAAO+B,EAAS,CAAC,CAACH,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3D1B,EAAQ8B,GAAU,CAAC,CAACJ,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,OAAO,KAAK,CAAC,CAAC,IAErFpC,EAAOqC,EAAS,CAAC,CAACD,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3D5B,EAAO+B,EAAS,CAAC,CAACH,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3DtB,EAAgBqB,EAAiB,CAACC,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,IAK9E,IAAMK,EAAWxB,EAAM,MACrB,gGACF,EACA,GAAIwB,EAGF,GAFA,QAAQ,IAAI,WAAW,EAEnBA,EAAS,QAAUA,EAAS,OAAO,MACrCzC,EAAO0C,EAAS,CAAC,CAACD,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3DvC,EAAQyC,GAAU,CAAC,CAACF,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,OAAO,KAAK,CAAC,CAAC,EACrFrC,EAAOwC,EAAS,CAAC,CAACH,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3DnC,EAAQuC,GAAU,CAAC,CAACJ,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,OAAO,KAAK,CAAC,CAAC,MAChF,CACL,IAAMK,EAAiBF,EAAS,CAAC,CAACH,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,EAC1EzC,EAAO0C,EAAS,CAAC,CAACD,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,EAAG,CAACA,EAAS,CAAC,CAAC,CAAC,CAAC,EAC3DrC,EAAO0C,CAAc,EACrBhC,EAAgBqB,EAAiBW,EAAe,CAAC,EAAGA,EAAe,CAAC,EAAGA,EAAe,CAAC,CAAC,CAAC,EAG/F,EAKI,gBAAiB,GACjB,qBAAqB,gDAErB,oBAAC,OAAK,QAAL,CACE,UAAArD,MACC,OAAC,OAAK,KAAL,CACC,MAAO,GAAGA,OACV,YAAa,CAAC,CAAE,KAAM,QAAS,CAAC,EAChC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,GAAGA,OAAU,EAChD,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAO,GAAGA,MACV,YAAa,CAAC,CAAE,KAAM,OAAQ,CAAC,EAC/B,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,GAAGA,MAAQ,EAC9C,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAO,GAAGA,MACV,YAAa,CAAC,CAAE,KAAM,OAAQ,CAAC,EAC/B,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,GAAGA,MAAQ,EAC9C,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAOA,EACP,KAAM,CAAE,OAAQ,OAAK,aAAc,UAAWT,EAAsBS,CAAG,CAAE,EACzE,YAAa,CAAC,CAAE,KAAM,QAAS,CAAC,EAChC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAASA,EAAK,EACxC,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAOA,EACP,KAAM,CAAE,OAAQ,OAAK,aAAc,UAAWX,EAAsBW,CAAI,CAAE,EAC1E,YAAa,CAAC,CAAE,KAAM,SAAU,CAAC,EACjC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAASA,EAAM,EACzC,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAO,OAAOA,EAAI,KAAK,IAAI,KAC3B,KAAM,CAAE,OAAQ,OAAK,aAAc,UAAWb,EAAsB,OAAOa,EAAI,KAAK,IAAI,IAAI,CAAE,EAC9F,YAAa,CAAC,CAAE,KAAM,QAAS,CAAC,EAChC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,OAAOA,EAAI,KAAK,IAAI,KAAM,EAC7D,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAO,QAAQA,EAAK,KAAK,IAAI,KAC7B,KAAM,CAAE,OAAQ,OAAK,aAAc,UAAWf,EAAsB,QAAQe,EAAK,KAAK,IAAI,IAAI,CAAE,EAChG,YAAa,CAAC,CAAE,KAAM,SAAU,CAAC,EACjC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,QAAQA,EAAK,KAAK,IAAI,KAAM,EAC/D,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAO,OAAOA,EAAI,CAAC,MAAMA,EAAI,CAAC,OAAOA,EAAI,CAAC,MAC1C,KAAM,CACJ,OAAQ,OAAK,aACb,UAAWjB,EAAsB,OAAOiB,EAAI,CAAC,MAAMA,EAAI,CAAC,OAAOA,EAAI,CAAC,KAAK,CAC3E,EACA,YAAa,CAAC,CAAE,KAAM,QAAS,CAAC,EAChC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,OAAOA,EAAI,CAAC,MAAMA,EAAI,CAAC,OAAOA,EAAI,CAAC,MAAO,EAC7E,EAEJ,EAEDE,MACC,OAAC,OAAK,KAAL,CACC,MAAO,QAAQA,EAAK,CAAC,MAAMA,EAAK,CAAC,OAAOA,EAAK,CAAC,OAAOA,EAAK,CAAC,KAC3D,KAAM,CACJ,OAAQ,OAAK,aACb,UAAWnB,EAAsB,QAAQmB,EAAK,CAAC,MAAMA,EAAK,CAAC,OAAOA,EAAK,CAAC,OAAOA,EAAK,CAAC,IAAI,CAC3F,EACA,YAAa,CAAC,CAAE,KAAM,SAAU,CAAC,EACjC,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAAS,QAAQA,EAAK,CAAC,MAAMA,EAAK,CAAC,OAAOA,EAAK,CAAC,OAAOA,EAAK,CAAC,KAAM,EAC7F,EAEJ,EAEDI,MACC,OAAC,OAAK,KAAL,CACC,MAAOE,IAAUF,EAAa,KAAOd,IAAQc,EAAa,IAAMA,EAAa,IAAMA,EAAa,KAChG,SAAUE,IAAUF,EAAa,KAAOd,IAAQc,EAAa,IAAMA,EAAa,KAAO,GACvF,KAAM,CAAE,OAAQ,OAAK,aAAc,UAAWvB,EAAsBuB,EAAa,GAAG,CAAE,EACtF,YAAa,CACX,CACE,KACEE,IAAUF,EAAa,KAAOd,IAAQc,EAAa,IAAM,yBAA2B,gBACxF,CACF,EACA,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAASE,IAAUF,EAAa,IAAMA,EAAa,IAAMA,EAAa,KAAM,EACtG,EAEJ,EAEDF,MACC,OAAC,OAAK,KAAL,CACC,MAAOA,EACP,YAAa,CAAC,CAAE,KAAMA,EAAS,SAAS,GAAG,EAAI,8BAAgC,qBAAsB,CAAC,EACtG,WACE,OAAC,eAAY,MAAM,OACjB,mBAAC,SAAO,gBAAP,CAAuB,QAASA,EAAU,EAC7C,EAEJ,GAEJ,EACF,CAEJ",
  "names": ["convert_exports", "__export", "Command", "__toCommonJS", "import_api", "import_react", "import_api", "loadBasePixelsFromPreferences", "basePixel", "BASE_FONT_PIXELS", "REMtoPX", "rem", "REMtoPT", "PXtoREM", "px", "PXtoPT", "PTtoREM", "pt", "PTtoPX", "HEXtoRGB", "hex", "result", "HEXtoRGBA", "HEXtoHSL", "match", "g", "b", "max", "min", "h", "s", "l", "d", "HEXtoHSLA", "rgba", "RGBtoHEX", "rgb", "x", "RGBtoHSL", "r", "RGBtoHEXA", "RGBtoHSLA", "HSLtoHEX", "hsl", "f", "n", "k", "color", "HSLtoHEXA", "HSLtoRGB", "a", "HSLtoRGBA", "colors", "findClosestColor", "r", "g", "b", "closestColor", "closestDistance", "colorGroup", "shade", "shadeRgb", "HEXtoRGB", "distance", "spacing", "PXtoTailwindSpacing", "value", "spacingValue", "s", "REMtoTailwindSpacing", "import_jsx_runtime", "disableAdjustContrast", "rawColor", "Command", "rem", "setREM", "px", "setPX", "pt", "setPT", "hex", "setHEX", "hexa", "setHEXA", "rgb", "setRGB", "rgba", "setRGBA", "hsl", "setHSL", "hsla", "setHSLA", "tailwind", "setTailwind", "closestColor", "setClosestColor", "input", "setInput", "value", "remMatch", "REMtoPX", "REMtoPT", "REMtoTailwindSpacing", "pxMatch", "PXtoREM", "PXtoPT", "PXtoTailwindSpacing", "ptMatch", "PTtoREM", "PTtoPX", "hexMatch", "HEXtoRGBA", "HEXtoRGB", "HEXtoHSLA", "HEXtoHSL", "hexToRgbResult", "findClosestColor", "rgbMatch", "RGBtoHEX", "RGBtoHEXA", "RGBtoHSL", "RGBtoHSLA", "hslMatch", "HSLtoHEX", "HSLtoHEXA", "HSLtoRGB", "HSLtoRGBA", "hslToRgbResult"]
}
